"""crear tablas y datos iniciales

Revision ID: 91da5003788d
Revises: 
Create Date: 2024-05-22 12:35:31.311191

"""

#a√±adimos la ruta del modulo config_selenium.py
import os,sys
from database import config_selenium
sys.path.append(os.path.abspath(os.path.dirname(config_selenium.__file__)))

from alembic import op
from sqlalchemy import table, column
from sqlalchemy import Integer,String,Float
import sqlalchemy as sa
from database.mercadona import productos_mercadona,categorias_mercadona
from database.alcampo import productos_alcampo,categorias_alcampo
from database.dia import productos_dia,categorias_dia

# revision identifiers, used by Alembic.
revision = '91da5003788d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('supermercado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('producto',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('precio', sa.Float(), nullable=False),
    sa.Column('precio_kg', sa.String(length=50), nullable=False),
    sa.Column('url_imagen', sa.String(length=255), nullable=False),
    sa.Column('id_supermercado', sa.Integer(), nullable=False),
    sa.Column('nombre_busqueda', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['id_supermercado'], ['supermercado.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    #ALMACENAMAOS DATOS INICIALES TRAS CREAR LAS TABLAS

    #---------- supermercados ----------
    supermercado_table = table('supermercado',
        column('id',Integer),
        column('nombre',String)
    )
    #insertamos los registros pasando una lista de diccionarios
    op.bulk_insert(supermercado_table, [
        {'nombre':'alcampo'},
        {'nombre':'dia'},
        {'nombre':'mercadona'}
    ])

    
    #---------- productos ----------
    producto_table = table('producto',
        column('id',Integer),
        column('nombre',String),
        column('precio',Float),
        column('precio_kg', String),
        column('url_imagen', String),
        column('id_supermercado', Integer),
        column('nombre_busqueda', String)
    )

    #tomo el set de tuplas, que necesito pasar a lista de diccionarios para poder usar bulk_insert
    
    productos_mercadona = categorias_mercadona()
    productos_mercadona=[
        {'nombre': p[0], 'precio': p[1], 'precio_kg': p[2], 'url_imagen': p[3], 'id_supermercado': p[4], 'nombre_busqueda': p[5]}
        for p in productos_mercadona
    ]
    op.bulk_insert(producto_table, productos_mercadona)
    
    
    productos_dia = categorias_dia()
    productos_dia=[
        {'nombre': p[0], 'precio': p[1], 'precio_kg': p[2], 'url_imagen': p[3], 'id_supermercado': p[4], 'nombre_busqueda': p[5]}
        for p in productos_dia
    ]
    op.bulk_insert(producto_table, productos_dia)
    
    productos_alcampo = categorias_alcampo()
    productos_alcampo=[
        {'nombre': p[0], 'precio': p[1], 'precio_kg': p[2], 'url_imagen': p[3], 'id_supermercado': p[4], 'nombre_busqueda': p[5]}
        for p in productos_alcampo
    ]
    op.bulk_insert(producto_table, productos_alcampo)
    
    

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('producto')
    op.drop_table('supermercado')
    # ### end Alembic commands ###
